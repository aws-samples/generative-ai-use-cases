setting:
  title: 設定情報
  update:
    message: >-
      GitHub にアップデートがあります。最新の機能を利用したい場合は <0>generative-ai-use-cases-jp</0> の
      main ブランチを pull して再度デプロイしてください。
  general: 全般
  items:
    version: バージョン
    version_help: generative-ai-use-cases-jp の package.json の version を参照しています
    rag_enabled: RAG (Amazon Kendra) 有効
    rag_kb_enabled: RAG (Knowledge Base) 有効
    agent_enabled: Agent 有効
    language: 言語設定
    language_help: 表示言語を変更できます
  ai: 生成 AI
  ai_items:
    llm_model: LLM モデル名
    image_gen_model: 画像生成 モデル名
    video_gen_model: 動画生成 モデル名
    agent_name: Agent 名
    model_region: LLM & 画像生成 モデルリージョン
  config_message: >-
    設定の変更はこの画面ではなく <0>AWS CDK</0> で行います。 また、ユースケース実行時にエラーになる場合は、必ず {{region}}
    にて指定したモデルを有効化しているか確認してください。それぞれのやり方については <1>generative-ai-use-cases-jp</1>
    をご参照ください。
  recent_updates: 最近のアップデート
  view_all_updates: 全てのアップデートを見る
  signout: サインアウト
common:
  not_available: 取得できませんでした
  loading: 読み込み中...
  clear: クリア
  execute: 実行
  error: エラー
  try: 試す
  load_more: さらに読み込む
  trace: トレース
  feedback_received: フィードバックを受け付けました。ありがとうございます。
  cancel: キャンセル
  delete: 削除
  save: 保存
  here: こちら
  optional: 任意
  submit: 送信
  no_options_found: オプションが見つかりません
  not_selected: 選択されていません
  required: 必須
  enter_text: 入力してください
  start_over: 最初からやり直す
  create: 作成
  title: タイトル
  next: 次
  previous: 前
  none: ありません
  complete: 完了
  close: 閉じる
  selectUseCase: ユースケースを選択
  errorNoSuggestions: 候補が見つかりませんでした。
  reviewComplete: レビュー完了
  notAuthenticated: 認証されていません。
writer:
  title: 執筆
  saved: 保存済み
  saving: 保存中
  characters: 文字
  clear: クリア
  tutorial: チュートリアル
  review: 校閲
  clear_success: エディタをクリアしました
  tutorial_success: チュートリアルを読み込みました
  no_issues: 問題は見つかりませんでした
  replace: 置換
  clear_comments: コメントをクリア
  no_results: 結果がありません
  appearance: 外観
  system: システム
  light: ライト
  dark: ダーク
  link: リンク
  paste_link: リンクを貼り付け
  color: 文字色
  background: 背景色
  colors:
    default: デフォルト
    purple: 紫
    red: 赤
    yellow: 黄
    blue: 青
    green: 緑
    orange: オレンジ
    pink: ピンク
    gray: グレー
  ai:
    trace: トレース
    thinking: 思考中
    instruct_ai: AI に指示
    continue_instruct: 続けて AI に指示
    search_instruct: 検索を AI に指示
    replace_selection: 選択範囲を置換
    insert_below: 選択範囲の下に挿入
    discard: 破棄
    error: エラーが発生しました
    ask_ai: AI に質問
    edit_selection: 選択範囲を編集
    use_search_engine: 検索エンジンを使う
    generate: 生成
    options:
      improve: 推敲
      fix: 校閲
      shorter: 短くする
      longer: 長くする
      search: 検索して執筆...
      collect_data: 裏付け・データを調査し追記
      fact_check: ファクトチェック
      continue: 続きを出力
  description: ライティングの支援、文章の推敲、校閲を行うツールです。AI の支援を得ながら効率的に執筆することができます。
  useAsTextEditor: テキストエディタとして使用する
  textEditorDescription: >-
    このエディタは通常のテキストエディタとして使用できます。太字、斜体、リスト、見出しなどの基本的な書式設定をサポートしています。また、執筆中の文字数も表示されます。
  autoCompleteFeature: AI自動補完機能
  autoCompleteDescription: >-
    選択したテキストに対してAIに指示を出すことができます。例えば「推敲」「校閲」「短くする」「長くする」などの操作や、カスタム指示を入力することも可能です。
  example1: 例えば、こちらの文章の続きをAIに出力させることができます：
  amazonBedrockDescription: >-
    Amazon Bedrock は完全マネージド型のサービスで、AI21 Labs、Anthropic、Cohere、Meta、Stability
    AI、Amazonなどの大手AI企業から、単一のAPIを通じて高性能な基盤モデル（FM）を選択し、セキュリティ、プライバシー、責任あるAIを備えた生成AIアプリケーションを構築するために必要な幅広い機能を提供します。
  example2: また、文章に含まれる事実をチェックすることもできます。以下の文章を選択して「ファクトチェック」を選んでみてください：
  factCheckExample: バラク・オバマは米国の第43代大統領です。彼は2001年から2009年まで大統領を務めました。
  reviewFeature: 校閲機能
  reviewDescription: 文書全体に対して校閲を行うことができます。誤字脱字や文法的な間違いを検出し、修正案を提示します。
  incorrectTextExample: わたしは日本に行たことがあります。東京はとても美意気な都市です。
chat:
  title: チャット
  drop_files: ファイルをドロップしてください
  sharing: シェア中
  share: シェアする
  show_system_prompt: システムプロンプトの表示
  system_prompt: システムプロンプト
  initialize: 初期化
  save: 保存
  share_conversation: 会話履歴のシェア
  delete_link_message: リンクを削除することで、会話履歴の公開を停止できます。
  create_link_message: リンクを作成することで、このアプリケーションにログイン可能な全ユーザーに対して会話履歴を公開します。
  open_link: リンクを開く
  delete_link: リンクの削除
  create_link: リンクの作成
  advanced_options: 高度なオプション
  model_parameters: モデルパラメータ
  settings: 設定
  delete_confirmation: 削除確認
  delete_chat_confirmation: 'チャット「{title}」を削除しますか？'
  history: 会話履歴
  search_by_title: 件名で検索
  create_system_prompt: システムプロンプトの作成
  saved_system_prompts: 保存したシステムプロンプト
  prompt_examples: プロンプト例
agent:
  title: Agent チャット
  drop_files: ファイルをドロップしてアップロード
flow:
  title: Flow チャット
notfound:
  title: ページが見つかりません
shared:
  error: エラー
  not_found_message: ページが見つかりませんでした。会話履歴がシェアされていないか、削除された可能性があります。
  contact_admin: 管理者に問い合わせてください。
rag:
  title: RAG チャット
  filter: フィルタ
  filter_settings: フィルター設定については
  here: こちら
  please_refer: をご参照ください。
  no_settings_found: 設定が見つかりませんでした。
  can_add_filters: をカスタマイズすることでフィルターを追加できます。
  retrieving: Kendra から参考ドキュメントを取得しています...
  errorRetrieval: |-
    Kendra から参考ドキュメントを取得できませんでした。以下をご確認ください：
    - Amazon Kendra インデックス作成のスケジュール時間が経過し、インデックス作成に十分な時間が経過したか
    - Amazon Kendra インデックス削除のスケジュール時間が経過していないか
  noDocuments: |-
    参考ドキュメントが見つかりませんでした。以下をご確認ください：
    - 対象ドキュメントが Amazon Kendra のデータソースに追加されているか
    - Amazon Kendra のデータソースが同期されているか
    - 入力の表現を変えてみてください
  page: ページ
  knowledgeBase:
    retrieving: Knowledge Base から参考ドキュメントを取得しています...
    retrieveError: >-
      取得中にエラーが発生しました。以下をご確認ください：

      - cdk.json で指定された embeddingModelId が Amazon Bedrock ({{region}})
      で有効になっているか
    noDocuments: |-
      参考ドキュメントが見つかりませんでした。以下をご確認ください：
      - 対象ドキュメントが Knowledge Base のデータソースに追加されているか
      - Knowledge Base のデータソースが同期されているか
      - 入力の表現を変えてみてください
summarize:
  title: 要約
  text_to_summarize: 要約したい文章
  enter_text: 入力してください
  additional_context: 追加コンテキスト
  additional_context_placeholder: 追加で考慮してほしい点を入力することができます（カジュアルさ等）
  result_placeholder: 要約された文章がここに表示されます
transcribe:
  title: 音声認識
  select_input_method: マイク入力 or ファイルアップロードから選択してください
  mic_input: マイク入力
  stop_recording: 録音を停止する
  start_recording: 録音を開始する
  file_upload: ファイルアップロード
  supported_files: 'mp3, mp4, wav, flac, ogg, amr, webm, m4a ファイルが利用可能です'
  detailed_parameters: 詳細なパラメータ
  speaker_recognition: 話者認識
  max_speakers: Max Speakers
  max_speakers_help: 認識する話者の最大数
  speaker_names: 話し手の名前（カンマ区切り）
  result_placeholder: 音声認識結果がここに表示されます
translate:
  title: 翻訳
  text_to_translate: 翻訳したい文章
  auto_translate: 自動翻訳
  auto_detect_language: 言語を自動検出
  enter_text: 入力してください
  additional_context: 追加コンテキスト
  additional_context_placeholder: 追加で考慮してほしい点を入力することができます（カジュアルさ等）
  result_placeholder: 翻訳結果がここに表示されます
  continue_output: 続きを出力
webcontent:
  title: Web コンテンツ抽出
  website_to_extract: コンテンツを抽出したい Web サイト
  instruction: ブログ、記事、ドキュメント等、テキストがメインコンテンツである Web サイトを指定してください。そうでない場合、正常に出力されないことがあります。
  enter_url: URL を入力してください
  additional_context: 追加コンテキスト
  additional_context_placeholder: '追加で考慮してほしい点を入力することができます（例: 要約して）'
  result_placeholder: 抽出された文章がここに表示されます
  error_message: >-
    指定した URL にアクセスした際にエラーが発生しました。スクレイピングが禁止されているか URL
    が間違っている可能性があります。一時的な問題と思われる場合は、再実行してください。
  original_text: '抽出前のテキスト ({{status}})'
  loading: 読み込み中...
  not_fetched: 未取得
  fetched: 取得済
  not_fetched_instruction: 未取得です。URL を入力して実行ボタンを押してください。
diagram:
  title: ダイアグラム生成
  input_label: ダイアグラム生成元の文章
  model: モデル
  diagram_type: 図の種類を選択
  other_diagram_types: 他の図の種類を見る
  input_placeholder: 生成元の文章を入力してください
  input_example: 入力例
  clear: クリア
  generate: 生成
  result: 生成結果
  step1_loading: 'ステップ１: 最適なダイアグラムを選んでいます'
  step1_complete: 'ステップ１: 完了'
  step1_selected: を選択
  step2_loading: 'ステップ２: 図を生成しています'
  answer: 回答
  diagram_will_appear: ダイアグラムがここに表示されます
  download_as_svg: SVGとしてダウンロード
  download_as_png: PNGとしてダウンロード
  show_diagram: 図を表示
  show_code: コードを表示
  invalid_syntax: 無効な構文
  svg_error: 'SVG出力エラー: '
  png_error: 'PNG出力エラー: '
  markdown_edit: マークダウン編集
  mermaid_syntax: Mermaid の記法はこちら
  types:
    AI:
      description: AIに最適なダイアグラムタイプを選択させます
      exampleTitle: 経費フロー例
      content: 会社の一般的な経費生産フローを色つきで図示してください。
    flowchart:
      title: フローチャート
      desc: フローチャートはプロセスやワークフローを視覚化します
      exampleTitle: 朝の準備フロー例
      content: |-
        朝の準備の流れをフローチャートで表現したいです。以下の手順を含めてください: 
        目覚める、ベッドから出る、顔を洗う、歯を磨く、朝食を食べる、服を着替える、家を出る、

        途中で「時間に余裕があるか？」という判断ポイントを入れ、余裕がある場合は「コーヒーを飲む」というステップを追加してください。
        時間に余裕がない場合は、そのまま「家を出る」に進むようにしてください。

        簡潔で見やすいデザインの図にしてください。
    piechart:
      title: 円グラフ
      desc: 円グラフは全体に対する割合を表現します
      exampleTitle: 通勤手段割合例
      content: |-
        東京都内の20代、30代の通勤・通学手段の割合を示す円グラフを作成したいです。

        電車、自転車、徒歩、車、バスの5つの手段について、それぞれの割合を適当に設定してください。
        グラフのタイトルは「東京都内20-30代の通勤・通学手段」としてください。
    mindmap:
      title: マインドマップ
      desc: マインドマップは関連する概念やアイデアを階層的に表現します
      exampleTitle: 生成AIユースケース例
      content: 生成AIのユースケースについて、様々なアイデアを考えてマインドマップで図示してください。
    quadrantchart:
      title: 象限チャート
      desc: 4象限チャートは2軸に沿って項目を分類します
      exampleTitle: ソーシャルメディア分析例
      content: |-
        ソーシャルメディアプラットフォームの特性を比較する4象限チャートを作成してください。
        タイトルは「ソーシャルメディアプラットフォーム分析」。 
        X軸は「テキスト中心」から「視覚中心」へと変化し、
        Y軸は「プロフェッショナル」から「カジュアル」へと変化する。

        各象限には以下のようにラベルを付けてください: 
        右上の象限: 「視覚的カジュアル」
        左上の象限: 「テキスト的カジュアル」
        左下の象限: 「テキスト的プロフェッショナル」
        右下の象限: 「視覚的プロフェッショナル」

        次のソーシャルメディアプラットフォームをチャート上にプロットしてください:
        Twitter: テキスト寄りでややカジュアル、
        Instagram: 非常に視覚的でかなりカジュアル、
        LinkedIn: テキスト寄りで非常にプロフェッショナル、
        TikTok: 非常に視覚的で最もカジュアル、
        Facebook: X軸とY軸の中間あたり。 

        可能であれば、各プラットフォームを異なる色で表示してください。
    sequencediagram:
      title: シーケンス図
      desc: シーケンス図はコンポーネント間の相互作用を時系列で表現します
      exampleTitle: ログインフロー例
      content: |-
        Webアプリケーションで、ユーザーがログインボタンを押してから認証が完了するまでの流れを示してください。

        フロントエンド、認証サーバー、データベースの3つのコンポーネントが関係します。
    timeline:
      title: タイムライン
      desc: タイムラインは時間に沿って出来事を順序立てて表示します
      exampleTitle: ソーシャルメディア進化例
      content: >-
        2000年から2020年までのソーシャルメディアの主要な進化と転換点をタイムラインで表現してください。
                
        以下の要素を含めてください: 
        ブログの普及期
        写真共有プラットフォームの台頭
        マイクロブログの登場
        動画共有サービスの発展
        モバイルファースト型SNSの広がり
        ショート動画プラットフォームの台頭

        各転換点について、その時期に起きた重要な技術革新や社会的変化（例:
        スマートフォンの普及、高速モバイルインターネットの実現など）も1-2個ずつ追記してください。
    gitgraph:
      title: Gitグラフ
      desc: Gitグラフはブランチやマージの履歴を視覚化します
      exampleTitle: 開発フロー例
      content: >-
        メインブランチから、ログイン機能とプロフィール編集機能の2つのfeatureブランチが分岐する開発フローを表現してください。

        ログイン機能の開発では、フォーム実装やバリデーション追加などの複数回のコミットを行い、最終的にPull
        Requestでmainブランチにマージします。

        一方、プロフィール編集機能の開発中には、mainブランチに加えられた最新の変更を取り込む必要が生じます。

        各マージポイントでは「Reviewed and merged login feature
        #123」のような、コードレビューを経た実際のプロジェクトらしいコミットメッセージを含めてください。
    erdiagram:
      title: ER図
      desc: ER図はデータベースのエンティティとリレーションシップを表現します
      exampleTitle: ブログDB設計例
      content: |-
        ブログシステムのデータベース設計を示してください。

        以下のテーブルがあり、それぞれ適切にリレーションが設定されています。:
        記事（posts）
        ユーザー（users）
        コメント（comments）
        カテゴリー（categories）
        タグ（tags）
    classdiagram:
      title: クラス図
      desc: クラス図はオブジェクト指向設計のクラス構造を表現します
      exampleTitle: ECサイトモデル例
      content: |-
        ECサイトのドメインモデルを作成してください。

        以下のクラスが存在します: 
        User（ユーザー）
        Product（商品）
        Order（注文）
        CartItem（カート内商品）

        各クラスには適切なプロパティとメソッドを含めてください。
    statediagram:
      title: 状態遷移図
      desc: 状態遷移図はシステムの状態変化を表現します
      exampleTitle: カート状態例
      content: |-
        オンラインショッピングカートの状態遷移を示してください。
        「空」、「商品追加済み」、「チェックアウト中」、「支払い完了」などの状態を含めます。
    xychart:
      title: XYチャート
      desc: XYチャートは2つの変数間の関係を表現します
      exampleTitle: 睡眠・労働時間例
      content: |-
        過去10年間の日本の平均睡眠時間と労働時間の関係を示すXYチャートを作成してください。

        X軸を1日の平均労働時間、Y軸を1日の平均睡眠時間とし、各年のデータポイントをプロットしてください。
    blockdiagram:
      title: ブロック図
      desc: ブロック図はシステムの主要コンポーネントを表現します
      exampleTitle: スマホ構成例
      content: |-
        スマートフォンのハードウェアコンポーネントを示すブロック図を作成してください。

        以下の要素を含めます:
        プロセッサ
        メモリ
        ストレージ
        ディスプレイ
        カメラ
        各種センサーなど。
    architecture:
      title: アーキテクチャ図
      desc: アーキテクチャ図はシステム全体の構造を表現します
      exampleTitle: Webアプリ構成例
      content: |-
        クラウドベースのWeb アプリケーションのアーキテクチャを示してください。

        以下のコンポーネントを含めます:
        フロントエンド
        バックエンド
        データベース
        キャッシュ
        ロードバランサー
        CDNなど
    ganttchart:
      title: ガントチャート
      desc: ガントチャートはプロジェクトスケジュールを視覚化します
      exampleTitle: 開発スケジュール例
      content: |-
        Webアプリケーション開発プロジェクトのスケジュールを示してください。
        要件定義、設計、開発、テスト、デプロイメントの各フェーズを含めます。
    userjourney:
      title: ユーザージャーニー
      desc: ユーザージャーニーは顧客体験の流れを表現します
      exampleTitle: 購買体験例
      content: |-
        オンラインショッピングサイトでの顧客の購買体験を示してください。

        以下の流れを含めてください:
        商品検索
        商品閲覧
        カートへの追加
        チェックアウト
        支払い
        配送追跡
    sankeychart:
      title: サンキーチャート
      desc: サンキーチャートはフローや変化量を幅で表現します
      exampleTitle: ユーザーフロー例
      content: |-
        Webサイトのユーザーフローを示すサンキーチャートを作成してください。
        ランディングページから始まり、各ページの遷移と離脱率を表示します。
    requirementdiagram:
      title: 要求図
      desc: 要求図はシステム要件と関係を表現します
      exampleTitle: スマートホーム要件例
      content: |-
        スマートホームシステムの主要な機能要件を示してください。
        照明制御、温度管理、セキュリティ、エネルギー効率化などの要件を含めます。
    networkpacket:
      title: ネットワークパケット図
      desc: ネットワークパケット図はデータ構造を表現します
      exampleTitle: HTTPパケット例
      content: |-
        HTTPリクエストパケットの構造を示す図を作成してください。
        ヘッダーとボディの主要な要素を含めます。
  chart: チャート
  serverBusy: サーバーが混雑しています。しばらく経ってから再度お試しください。
generateText:
  title: 文章生成
  source_info: 文章の元になる情報
  input_placeholder: 入力してください
  format_placeholder: 文章の形式を指示してください。(マークダウン、ブログ、ビジネスメールなど)
  continue_output: 続きを出力
  clear: クリア
  execute: 実行
  result_placeholder: 生成された文章がここに表示されます
optimizePrompt:
  title: プロンプト最適化
  input_placeholder: 現在利用中のプロンプトをそのまま入力してください。英語で出力されてしまう場合は「日本語で出力してください」という指示を追加してください。
  result_placeholder: 結果がここに表示されます
  clear: クリア
  execute: 実行
videoAnalyzer:
  title: 映像分析
  label: 映像をニアリアルタイムに分析する
  camera: カメラ
  start: 開始
  stop: 停止
  model: モデル
  clear: クリア
  errors:
    cameraAccessFailed: 'ウェブカメラにアクセスできませんでした:'
generateImage:
  title: 画像生成
  prompt: プロンプト
  negative_prompt: ネガティブプロンプト
  model: モデル
  resolution: 解像度
  seed: シード
  image_samples: 画像サンプル数
  generation_mode: 生成モード
  mask_prompt: マスクプロンプト
  colors: カラー
  control_mode: コントロールモード
  style_preset: スタイルプリセット
  cfg_scale: CFGスケール
  steps: ステップ数
  image_strength: 画像強度
  control_strength: コントロール強度
  generate: 生成
  clear: クリア
  detail_parameters: 詳細なパラメータ
  init_image: 初期画像
  mask_image: マスク画像
  set: 設定
  custom_colors: カスタムカラー
  add_color: カラーを追加
  help:
    prompt: 生成したい画像の説明を記載してください。文章ではなく、単語の羅列で記載します。
    negative_prompt: 生成したくない要素、排除したい要素を記載してください。文章ではなく、単語の羅列で記載します。
    seed: 乱数のシード値です。同じシード値を指定すると同じ画像が生成されます。
    image_samples: Seed をランダム設定しながら画像を指定の数だけ同時に生成します。
    generation_mode: >-
      TEXT_IMAGE:テキストから画像を生成します。
      IMAGE_VARIATION:参照画像から類似画像を生成します。
      INPAINTING:画像の一部を編集します。
      OUTPAINTING:画像を拡張します。
      IMAGE_CONDITIONING:構図を反映します。
      COLOR_GUIDED_GENERATION:配色指定で生成します。
      BACKGROUND_REMOVAL:背景を除去します
    init_image: 画像生成の初期状態となる画像を設定できます。初期画像を設定することで、初期画像に近い画像を生成するように誘導できます。
    mask_image: >-
      画像のマスクを設定できます。マスク画像を設定することで、マスクされた領域（Inpaint）もしくは外側の領域（Outpaint)を生成できます。マスクプロンプトと併用はできません。
    mask_prompt: >-
      マスクしたい/排除したい要素（Inpaint）、マスクしたくない/残したい要素（Outpaint）を記載してください。文章ではなく、単語の羅列で記載します。マスク画像と併用はできません。
    colors: プリセットのカラーパレットから選択できます
    control_mode: >-
      CANNY_EDGE:参照画像のエッジを抽出します。詳細な模様などを反映したい場合に最適です。SEGMENTATION:参照画像内を領域に区切ります。複数の物体の位置関係を反映したい場合に最適です。
    cfg_scale: この値が高いほどプロンプトに対して忠実な画像を生成します。
    steps: 画像生成の反復回数です。Step 数が多いほど画像が洗練されますが、生成に時間がかかります。
    image_strength: 1に近いほど「初期画像」に近い画像が生成され、0に近いほど「初期画像」とは異なる画像が生成されます。
    control_strength: 1に近いほど「参照画像」の構図に基づいた画像が生成され、0に近いほど「参照画像」の構図とは異なる画像が生成されます。
  assistant:
    title: 画像生成アシスタント
    help: 画像生成用のプロンプトを作成します。アシスタントに希望を伝えると、AIがプロンプトとネガティブプロンプトを生成して画像を作成します。
    hint_title: ヒント
    hint_1: 「かわいい猫の画像を生成して」のような簡単な指示から始めてみましょう。
    hint_2: 「水彩画風に」や「リアルに」などスタイルを指定すると効果的です。
    hint_3: 「背景に山」や「青空」など、含めたい要素を詳細に描写しましょう。
    hint_4: 「高解像度」や「細部まで描写」など、品質に関する指示も効果的です。
    hint_5: 「アニメ風」や「油絵風」など、特定の芸術スタイルを指定することもできます。
    hint_6: 複雑なシーンの場合は、構図、配色などについて具体的に指示しましょう。
    error_title: エラーが発生しました
    error_message: プロンプトの生成に失敗しました。もう一度試してください。
    retry: 再試行
    generating_prompt: プロンプト生成中...
    prompt_completed: プロンプト生成完了
    generating_image: 画像生成中...
    recommended_style: おすすめスタイル
    no_style: スタイルなし
    input_placeholder: どのような画像を生成したいですか？
landing:
  title: ではじめる生成 AI
  try_message: をクリックすることで、各ユースケースを体験できます。
  use_cases_title: ユースケース一覧
  use_cases:
    chat:
      title: チャット
      description: >-
        LLM
        とチャット形式で対話することができます。細かいユースケースや新しいユースケースに迅速に対応することができます。プロンプトエンジニアリングの検証用環境としても有効です。
    rag_chat:
      title: RAG チャット
      sub_kendra: Amazon Kendra
      sub_kb: Knowledge Base
      description_kendra: >-
        RAG (Retrieval Augmented Generation) は、情報の検索と LLM
        の文章生成を組み合わせる手法のことで、効果的な情報アクセスを実現できます。Amazon Kendra から取得した参考ドキュメントをベースに
        LLM が回答を生成してくれるため、「社内情報に対応した LLM チャット」を簡単に実現することが可能です。
      description_kb: >-
        RAG (Retrieval Augmented Generation) は、情報の検索と LLM
        の文章生成を組み合わせる手法のことで、効果的な情報アクセスを実現できます。Knowledge Base の Hybrid Search
        を利用して参考ドキュメントを取得し、LLM が回答を生成します。
    agent_chat:
      title: Agent チャット
      description: >-
        Agent チャットユースケースでは Agents for Amazon Bedrock を利用してアクションを実行させたり、Knowledge
        Bases for Amazon Bedrock のベクトルデータベースを参照することが可能です。
    flow_chat:
      title: Flow チャット
      description: >-
        Flow
        を使用して、複数のステップを持つ対話型チャットフローを作成します。ユーザーの入力に基づいて、動的に次のステップを決定し、より複雑な対話シナリオを実現します。
    generate_text:
      title: 文章生成
      description: >-
        あらゆるコンテキストで文章を生成することは LLM が最も得意とするタスクの 1
        つです。記事・レポート・メールなど、あらゆるコンテキストに対応します。
    summarize:
      title: 要約
      description: >-
        LLM
        は、大量の文章を要約するタスクを得意としています。要約する際に「1行で」や「子供でもわかる言葉で」などコンテキストを与えることができます。
    writer:
      title: 執筆
      description: >-
        多言語で学習した LLM
        は、翻訳を行うことも可能です。また、ただ翻訳するだけではなく、カジュアルさ・対象層など様々な指定されたコンテキスト情報を翻訳に反映させることが可能です。
    translate:
      title: 翻訳
      description: >-
        多言語で学習した LLM
        は、翻訳を行うことも可能です。また、ただ翻訳するだけではなく、カジュアルさ・対象層など様々な指定されたコンテキスト情報を翻訳に反映させることが可能です。
    web_content:
      title: Web コンテンツ抽出
      description: >-
        ブログやドキュメントなどの Web コンテンツを抽出します。LLM
        によって不要な情報はそぎ落とし、成立した文章として整形します。抽出したコンテンツは要約、翻訳などの別のユースケースで利用できます。
    image:
      title: 画像生成
      description: >-
        画像生成 AI
        は、テキストや画像を元に新しい画像を生成できます。アイデアを即座に可視化することができ、デザイン作業などの効率化を期待できます。こちらの機能では、プロンプトの作成を
        LLM に支援してもらうことができます。
    video-generation:
      title: 動画生成
      description: >-
        動画生成 AI はテキストから短い動画を生成します。生成した動画は素材としてさまざまなシーンで活用できます。
    video-analysis:
      title: 映像分析
      description: >-
        マルチモーダルモデルによってテキストのみではなく、画像を入力することが可能になりました。こちらの機能では、映像の画像フレームとテキストを入力として
        LLM に分析を依頼します。
    diagram:
      title: ダイアグラム生成
      description: >-
        自然言語による説明、文書やコードから、フローチャート、シーケンス図、マインドマップなどの様々な図を自動的に作成できます。システム設計、ビジネスフロー、プロジェクト計画などの複雑な関係性を、視覚的に表現し理解を効率化します。
  use_cases_integration:
    title: ユースケース連携
    blog:
      title: ブログ記事作成
      description: >-
        複数のユースケースを組み合わせて、ブログ記事を生成します。記事の概要とサムネイル画像も自動生成することで、OGP
        の設定も容易になります。例として、AWS 公式サイトの情報を元に生成 AI を紹介するブログ記事を生成します。
    meeting:
      title: 議事録作成
      description: >-
        複数のユースケースを組み合わせて、会議の録音データから議事録を自動作成します。録音データの文字起こし、文字起こし結果の整形、議事録作成を人的コストをかけずに行うことが可能です。
  try: 試す
  demo:
    agent:
      content: generative-ai-use-cases-jp とはなんですか？
    chat:
      content: |-
        フィボナッチ数を返す Python の関数を書いてください。また、実装を解説してください。
        引数が項で、処理は再帰で書くようにしてください。出力はマークダウンにしてください。
    diagram:
      content: 会社の一般的な経費生産フローを色つきで図示してください。
    generate:
      context: Amazon Bedrock は、AI21 Labs、Anthropic、Cohere、Meta、Stability AI、Amazon などの大手 AI 企業が提供する高性能な基盤モデル (FM) を単一の API で選択できるフルマネージド型サービスです。また、生成 AI アプリケーションの構築に必要な幅広い機能も備えているため、プライバシーとセキュリティを維持しながら開発を簡素化できます。Amazon Bedrock の包括的な機能を使用すると、さまざまなトップ FM を簡単に試したり、微調整や検索拡張生成 (RAG) などの手法を使用してデータを使用してプライベートにカスタマイズしたり、旅行の予約や保険金請求の処理から広告キャンペーンの作成や在庫管理まで、複雑なビジネスタスクを実行するマネージドエージェントを作成したりできます。これらはすべて、コードを記述することなく行えます。Amazon Bedrock はサーバーレスであるため、インフラストラクチャを管理する必要がありません。また、使い慣れた AWS サービスを使用して、生成 AI 機能をアプリケーションに安全に統合してデプロイできます。
      information: プレゼンテーションのために、マークダウン形式で章立てして、それぞれ端的に説明を
    image:
      content: |-
        スマホ広告のデザイン案を出力してください。
        可愛い、おしゃれ、使いやすい、POPカルチャー、親しみやすい、若者向け、音楽、写真、流行のスマホ、背景が街
    rag:
      content: Claude のパラメータを説明し、その設定方法も教えてください。
    summarize:
      sentence: Amazon Bedrock は、Amazon や主要な AI スタートアップ企業が提供する基盤モデル (FM) を API を通じて利用できるようにする完全マネージド型サービスです。そのため、さまざまな FM から選択して、ユースケースに最も適したモデルを見つけることができます。Amazon Bedrock のサーバーレスエクスペリエンスにより、すぐに FM を開始したり、FM を簡単に試したり、独自のデータを使用して FM をプライベートにカスタマイズしたり、AWS のツールや機能を使用して FM をアプリケーションにシームレスに統合してデプロイしたりできます。Amazon Bedrock のエージェントは、開発者が独自の知識源に基づいて最新の回答を提供し、幅広いユースケースのタスクを完了できるジェネレーティブ AI アプリケーションを開発者が簡単に作成できるようにする完全マネージド機能です。Bedrock のサーバーレスエクスペリエンスにより、インフラストラクチャを管理することなく、すぐに使用を開始し、独自のデータを使用して FM をプライベートにカスタマイズし、使い慣れた AWS ツールや機能を使用してそれらをアプリケーションに簡単に統合してデプロイできます (さまざまなモデルをテストするための実験や FM を大規模に管理するためのパイプラインなどの Amazon SageMaker の ML 機能との統合を含みます)。
    translate:
      language: en
      sentence: こんにちは。私は翻訳を支援する AI アシスタントです。お好きな文章を入力してください。
    video:
      content: 映っているものを説明してください。もし映っているものに文字が書かれている場合はそれも読んでください。
    web_content:
      url: https://aws.amazon.com/jp/bedrock/
useCaseBuilder:
  accessError: アクセスエラー
  notExistOrNotShared: このユースケースは存在しないか、共有されていないユースケースです。
  returnToTop: TOP画面に戻る
  myUseCases: マイユースケース
  createNew: 新規作成
  noMyUseCases: マイユースケースがありません。
  loadMore: さらに読み込む
  samples: サンプル集
  edit: ユースケースの編集
  cancel: キャンセル
  title: タイトル
  description: 説明
  promptTemplate: プロンプトテンプレート
  inputExamples: 入力例
  addInputExample: 入力例を追加
  deleting: 削除中...
  updating: 更新中...
  creating: 作成中...
  shared: 共有
  private: 非公開
  promptTemplatePlaceholder: プロントテンプレートの書き方については、「ヘルプ」か「サンプル集」をご覧ください。
  promptTemplateHint: >-
    ユーザーの入力を受け付けないユースケースは作成できません。プロンプトテンプレートに Placeholder を定義するか、ファイル添付を ON
    にしてください。
  modelFixed: モデルが固定化されています。
  modelNotFixed: モデルは固定化されていません。
  modelFixedDescription: モデル選択の UI が表示されないため、ユーザーは生成 AI の存在を意識せずにユースケースを利用できます
  modelNotFixedDescription: モデル選択の UI が表示され、ユーザーは自由にモデルを選択できます。
  fileUploadEnabled: ファイルを添付できます
  fileUploadDisabled: ファイルは添付できません
  fileUploadDescription: 添付可能なファイルはモデルによって異なります
  createDescription: ユースケースを作成します。プレビューで動作確認してから作成してください。作成後に編集することも可能です。
  createErrorCondition: 作成可能なユースケースの条件を満たしていません。以下条件を全て満たしてください。
  create: 作成
  updateDescription: ユースケースを更新します。ユースケースが共有され他ユーザーも利用している場合、その内容も更新されます。
  updateErrorCondition: 更新するためには、以下条件を全て満たしてください。
  update: 更新
  deleteDescription: ユースケースを削除します。共有されている場合、他のユーザーからもアクセスできなくなります。
  delete: 削除
  preview: プレビュー
  deleteUseCaseTitle: マイユースケースの削除
  deleteSharedWarning: このユースケースは共有されています。削除すると、すべてのユーザーはこのユースケースを使えなくなります。
  deleteConfirmation: を削除しますか？
  share: 共有
  sharedDescription: このユースケースは、このアプリケーションにログインできる全ユーザーが利用できます。
  notSharedDescription: このユースケースは共有されていないため、あなたしか利用できません。
  shareUrlDescription: この共有URLにアクセスすることで、他のユーザーもこのユースケースを利用できます。
  ok: OK
  menuAppDefinition: アプリ定義
  menuInputExamples: 入力例
  menuModelSelection: モデル選択
  menuFileAttachment: ファイル添付
  menuUpdate: 更新
  menuDelete: 削除
  menuCreate: 作成
  builderMode: ビルダーモード
  mainMenu: メインメニュー
  favorites: お気に入り
  recentlyUsed: 利用履歴
  untitledUseCase: 無題のユースケース
  untitled: 無題
  resultPlaceholder: ここに結果が表示されます
  attach_file: ファイル添付
  error:
    rag_kendra_not_enabled: >-
      プロンプトテンプレート内で {{retrieveKendra}} が指定されていますが GenU で RAG チャット (Amazon
      Kendra) が有効になっていません。
    rag_knowledge_base_not_enabled: >-
      プロンプトテンプレート内で {{retrieveKnowledgeBase}} が指定されていますが GenU で RAG チャット
      (Knowledge Base) が有効になっていません。
    missing_text_form: 'Amazon Kendra の検索クエリを入力するためのフォーム {{text{{label}}}} をプロンプテンプレートに内に記述してください。'
    missing_kb_text_form: >-
      Knowledge Base の検索クエリを入力するためのフォーム {{text{{label}}}}
      をプロンプテンプレートに内に記述してください。
    missing_select_options: '{{select}} にオプションが設定されていません。{{select:ラベル:オプション1,オプション2}} のように設定してください'
    empty_select_options: '{{select:{{label}}}} に空のオプションが含まれています。'
    duplicate_select_options: '{{select:{{label}}}} に重複したオプションが含まれています。'
  blog:
    generate_article: ブログ記事作成
    generate_article_context: |-
      生成AIの仕組みの解説とAWSで生成AIを利用するメリットを解説するブログ記事を生成してください。記事を生成する際は、<rules></rules>を必ず守ってください。
      <rules>
      - マークダウン形式で章立てして書いてください。
      - 生成AIおよび、AWS初心者をターゲットにした記事にしてください。
      - IT初心者が分からないような用語は使わないか、分かりやすい言葉に置き換えてください。
      - 生成AIで何ができるのかがわかる記事にしてください。
      - 文章量が少ないと読者が満足しないので、一般的な情報は補完しながら文量を多くしてください。
      - 読者の興味を惹きつけるような文章にしてください。
      </rules>
    generate_article_description: 参考情報を元にブログの記事を自動生成します。コンテキストを詳細に設定することで、自分の意図した内容で記事が生成されやすくなります。
    generate_thumbnail: ブログ記事のサムネイル画像作成
    generate_thumbnail_content: |-
      ブログ記事のOGP用にサムネイル画像を生成してください。クラウドやAIの記事であることが一目でわかる画像にしてください。
      ブログ記事の概要は<article></article>に設定されています。
      <article>
      {summarizedSentence}
      </article>
    generate_thumbnail_description: OGP（記事のリンクをシェアする際に表示される記事のプレビュー）用に、サムネイルを生成します。OGP にキャッチーなサムネイルを設定することで、読者の関心を惹くことができるかもしれません。
    reference_info: 参考情報
    reference_info_context: 生成AIの概要、仕組みを解説している部分、AWSについて説明している部分のみ抽出してください。
    reference_info_description: |-
      URL を指定して、記事の参考となる情報を自動取得します。
      追加コンテキストを設定することで、自分の欲しい情報のみを抽出可能です。
    summarize_article: 要約
    summarize_article_description: OGP（記事のリンクをシェアする際に表示される記事のプレビュー）用に、記事を要約します。OGP を適切に設定することで、記事がシェアされた際に記事の概要を正しく伝えることができます。
  help:
    emailReplyExample: メール返信の例
    emailReplyPrompt: メール返信のプロンプト
    example: 例
    formPlaceholderDescription: フォームのプレースホルダーの説明
    formPlaceholderExample:
      prompt: フォームのプレースホルダーの例
      title: フォームのプレースホルダーのタイトル
    placeholder: プレースホルダー
    placeholderDescription: プレースホルダーの説明
    placeholderList: プレースホルダーのリスト
    promptTemplateDescription: プロンプトテンプレートの説明
    promptTemplateTitle: プロンプトテンプレート
    retrieveKendraDescription: RAG チャット (Amazon Kendra) の説明
    retrieveKendraExample:
      prompt: RAG チャット (Amazon Kendra) の例
      title: RAG チャット (Amazon Kendra) のタイトル
    retrieveKnowledgeBaseDescription: RAG チャット (Knowledge Base) の説明
    retrieveKnowledgeBaseExample:
      prompt: RAG チャット (Knowledge Base) の例
      title: RAG チャット (Knowledge Base) のタイトル
    selectPlaceholderDescription: フォームのプレースホルダーの説明
    selectPlaceholderExample:
      prompt: フォームのプレースホルダーの例
      title: フォームのプレースホルダーのタイトル
    textPlaceholderDescription: テキストのプレースホルダーの説明
  helpTitle: ヘルプ
  meeting:
    create_minutes: 議事録作成
    create_minutes_context: |-
      会議の発言内容を元にマークダウン形式の議事録を作成してください。
      会議で話したテーマごとに章立てし、議論した内容、決定事項、宿題事項をまとめてください。
    create_minutes_description: 「文章生成」の機能を使って、議事録を生成します。コンテキストを詳細に指定することで、議事録のフォーマットや記載の粒度を指示できます。
    formatting: 議事録作成のフォーマット
    formatting_context: |-
      録音データの文字起こし結果が入力されているので、<rules></rules>の通りに整形してください。
      <rules>
      - フィラーワードを除去してください。
      - 文字起こしの誤認識と思われる内容は正しい内容に書き換えてください。
      - 接続詞などが省略されている場合は、読みやすいように補完してください。
      - 質疑応答も省略せず、記載してください。
      </rules>
    formatting_description: 「文章生成」の機能を使って、文字起こしファイルを整形します。フィラーワードの除去や音声認識が正しくできていない部分などを補正し、人間が理解しやすいようにします。
    transcription: 議事録作成の音声文字起こし
    transcription_description: |-
      「音声認識」の機能を使って、録音データから会話の内容を文字起こしします。任意の音声ファイルで実行してください。
      音声認識が完了したら、「整形」ボタンを押してください（音声認識結果は自動でコピーされます）。
auth:
  title: Generative AI Use Cases on AWS
  loading: 読み込み中...
  login: ログイン
drawer:
  builder_mode: ビルダーモード
  use_cases: ユースケース
  generative_ai: (生成 AI)
  tools: ツール
  ai_services: AI サービス
feedback:
  reason_title: この回答を評価した理由をお聞かせください。
  reason_error: 理由を選択してください。
  additional_feedback: 他にフィードバックがありましたら、入力してください。(任意)
  reasons:
    inaccurate: 不正確
    outdated: 情報が古い
    harmful: 有害または攻撃的
    other: その他
model:
  parameters:
    reasoning: Reasoning
    reasoning_budget: Reasoning Budget
demo:
  inter_use_cases: ユースケース連携
sketch:
  upload_image: 画像をアップロード
  pen_size: ペンサイズ
  clear: クリア
video:
  model: モデル
  prompt:
    title: プロンプト
    placeholder: Kids are playing with many balls
    display: プロンプトはここに表示されます
  dimension: 画面サイズ
  resolution: 解像度
  aspectRatio: アスペクト比
  duration: 動画長 (秒)
  fps: FPS
  seed:
    title: シード値
    help: 乱数のシード値です。同じシード値を指定すると同じ動画が生成されます。
  loop: ループ
  generate: 生成
  clear: クリア
  press:
    play: 再生ボタンを押してください
  generation:
    started: 動画生成ジョブを開始しました。生成中にページを離脱しても問題ありません。
    failed: 動画生成に失敗しました ({{error}})
  load:
    more: さらに読み込む
  table:
    play: 再生
    status: ステータス
    prompt: プロンプト
    model: モデル
    date: 日時
    download: ダウンロード
    delete: 削除
  status:
    inprogress: 処理中
    completed: 完了
    failed: 失敗
  loading: 読み込み中...
  no_preview: プレビューはありません
  preview_loading: プレビュー読み込み中...
  job:
    delete_confirm: このジョブを削除してもよろしいですか？
    delete_success: ジョブが削除されました
    delete_failed: ジョブの削除に失敗しました
    no_jobs: 生成ジョブはありません
    list: ジョブ一覧
  error:
    model_not_selected: モデルが選択されていません
    empty_prompt: プロンプトを入力してください
    invalid_parameters: パラメータが無効です
  upload: アップロード
  uploadImage: 画像アップロード
  uploadImageHelp: 動画の 1 フレーム目に使われる画像を指定できます
  supportedExtensions: 'サポートされている拡張子: {{acceptedExtensions}}'
  supportedImageDimensions: 'サポートされている画像サイズ: {{supportedDimensions}}'
files:
  error:
    fileCountExceeded: ファイル数は {{maxCount}} 個以下にしてください。
    fileSizeExceeded: ファイルサイズは {{maxSize}} MB 以下にしてください。
    imageCountExceeded: 画像数は {{maxCount}} 個以下にしてください。
    invalidExtension: '{{fileName}} は許可されていない拡張子です。許可されている拡張子は {{acceptedExtensions}} です。'
    mimeMismatch: '{{fileName}} のファイル形式が不正です。'
    modelNotSupported: モデルが対応していません。
    videoCountExceeded: 動画数は {{maxCount}} 個以下にしてください。
    invalidImageDimension: 指定可能な画像ファイルのサイズは {{allowedDimensions}} です (アップロードされた画像のサイズ {{uploadedDimension}})
navigation:
  agentChat: Agent チャット
  chat: チャット
  diagramGeneration: ダイアグラム生成
  flowChat: Flow チャット
  home: ホーム
  imageGeneration: 画像生成
  videoGeneration: 動画生成
  promptOptimization: プロンプト最適化
  ragChat: RAG チャット
  settings: 設定
  speechRecognition: 音声認識
  summary: 要約
  textGeneration: 文章生成
  translation: 翻訳
  videoAnalysis: 映像分析
  webContentExtraction: Web コンテンツ抽出
  writing: 執筆
language:
  en: 英語
  ja: 日本語
  zh: 中国語
  ko: 韓国語
  fr: フランス語
  es: スペイン語
  de: ドイツ語
